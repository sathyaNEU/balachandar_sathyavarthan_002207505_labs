/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Account;
import model.AccountDirectory;

/**
 *
 * @author Sathya
 */
public class ManageAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageAccountJPanel
     */
    
    JPanel workArea;
    AccountDirectory accountDirectory;
    
    
    public ManageAccountJPanel(JPanel workArea, AccountDirectory accountDirectory) {
        initComponents();
        this.workArea = workArea;
        this.accountDirectory = accountDirectory;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        accTable = new javax.swing.JTable();
        accNumTextField = new javax.swing.JTextField();
        searchAccBtn = new javax.swing.JButton();
        viewAccBtn = new javax.swing.JButton();
        deleteAccBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        jLabel1.setText("Account Management ");

        accTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Account Number", "Routing Number", "Bank Name", "Balance"
            }
        ));
        jScrollPane1.setViewportView(accTable);

        searchAccBtn.setText("Lookup");
        searchAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAccBtnActionPerformed(evt);
            }
        });

        viewAccBtn.setText("View Account");
        viewAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAccBtnActionPerformed(evt);
            }
        });

        deleteAccBtn.setText("Delete Account");
        deleteAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccBtnActionPerformed(evt);
            }
        });

        backBtn.setText("<-- Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(searchAccBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(viewAccBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deleteAccBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                                .addGap(41, 41, 41)
                                .addComponent(accNumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(backBtn)))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchAccBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accNumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(viewAccBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteAccBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(14, 14, 14))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        this.workArea.remove(this);
        CardLayout cardLayout = (CardLayout) this.workArea.getLayout();
        cardLayout.previous(this.workArea);
    }//GEN-LAST:event_backBtnActionPerformed

    private void deleteAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccBtnActionPerformed
        // TODO add your handling code here:
        int index = this.accTable.getSelectedRow();
        if(index==-1){
            JOptionPane.showMessageDialog(this, "Row not selected","Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            int result = JOptionPane.showConfirmDialog(null, "Do you want to delete ?", "WARNING", JOptionPane.YES_NO_OPTION);
            if(result==JOptionPane.YES_OPTION){
                   DefaultTableModel model = (DefaultTableModel)this.accTable.getModel();
            Account acc = (Account)model.getValueAt(index, 0);
            this.accountDirectory.deleteAccFromAccDirectory(acc);
            JOptionPane.showMessageDialog(this, "Account deleted Successfully");
            populateTable();
            }
         
            
        }
    }//GEN-LAST:event_deleteAccBtnActionPerformed

    private void viewAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAccBtnActionPerformed
        // TODO add your handling code here:
        int index = this.accTable.getSelectedRow();
        if(index==-1){
            JOptionPane.showMessageDialog(this, "Row not selected","Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            DefaultTableModel model = (DefaultTableModel)this.accTable.getModel();
            Account acc = (Account)model.getValueAt(index, 0);
            viewMoreJPanel viewMorePanel = new viewMoreJPanel(this.workArea, acc);
            this.workArea.add("viewMorePanel",viewMorePanel);
            CardLayout cardLayout = (CardLayout) this.workArea.getLayout();
            cardLayout.next(this.workArea);

            
        }
        
    }//GEN-LAST:event_viewAccBtnActionPerformed

    private void searchAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAccBtnActionPerformed
        // TODO add your handling code here:
         try{
            String accNum= this.accNumTextField.getText();
            if(accNum.isEmpty()){
                JOptionPane.showMessageDialog(this, "Account Number cannot be empty", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            else{
                Account acc = this.accountDirectory.searchAccFromAccountDirectory(accNum);
                if(acc!=null){
                    viewMoreJPanel viewMorePanel = new viewMoreJPanel(this.workArea, acc);
            this.workArea.add("viewMorePanel",viewMorePanel);
            CardLayout cardLayout = (CardLayout) this.workArea.getLayout();
            cardLayout.next(this.workArea);
                }
                else
                   JOptionPane.showMessageDialog(this, "Account Not Found", "ERROR", JOptionPane.ERROR_MESSAGE); 
     
        }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "NULL, ZERO, NEGATIVE or INVALID CHARACTERS encountered in text fields", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchAccBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accNumTextField;
    private javax.swing.JTable accTable;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteAccBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchAccBtn;
    private javax.swing.JButton viewAccBtn;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel)this.accTable.getModel();
        model.setRowCount(0);
        for(Account acc : this.accountDirectory.getAccountDirectory()){
            Object[] obj = new Object[4];
            obj[0] = acc;
            obj[1] = acc.getRoutingNum();
            obj[2] = acc.getBankName();
            obj[3] = acc.getBalance();
            System.out.println(acc.getAccNum()+" "+acc.getRoutingNum()+ " "+acc.getBankName());
            model.addRow(obj);
        }
    }
}
